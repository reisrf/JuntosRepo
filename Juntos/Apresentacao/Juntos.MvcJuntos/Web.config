<?xml version="1.0"?>
<!--
  For more information on how to configure your ASP.NET application, please visit
  http://go.microsoft.com/fwlink/?LinkId=152368
  -->

<configuration>
  <configSections>
    <section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration"/>
  </configSections>

  <connectionStrings>
    <add name="ApplicationServices"
         connectionString="data source=.\SQLEXPRESS;Integrated Security=SSPI;AttachDBFilename=|DataDirectory|aspnetdb.mdf;User Instance=true"
         providerName="System.Data.SqlClient" />
    <add name="JuntosDb" connectionString="Data Source=C:\db\JuntosDb.sdf" providerName="System.Data.SqlServerCe.4.0"/>

  </connectionStrings>

  <appSettings>
    <add key="webpages:Version" value="1.0.0.0"/>
    <add key="ClientValidationEnabled" value="true"/>
    <add key="UnobtrusiveJavaScriptEnabled" value="true"/>
  </appSettings>

  <system.web>
    <compilation debug="true" targetFramework="4.0">
      <assemblies>
        <add assembly="System.Web.Abstractions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
        <add assembly="System.Web.Helpers, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
        <add assembly="System.Web.Routing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
        <add assembly="System.Web.Mvc, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
        <add assembly="System.Web.WebPages, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
      </assemblies>
    </compilation>

    <authentication mode="Forms">
      <forms loginUrl="~/Account/LogOn" timeout="2880" />
    </authentication>

    <membership>
      <providers>
        <clear/>
        <add name="AspNetSqlMembershipProvider" type="System.Web.Security.SqlMembershipProvider" connectionStringName="ApplicationServices"
             enablePasswordRetrieval="false" enablePasswordReset="true" requiresQuestionAndAnswer="false" requiresUniqueEmail="false"
             maxInvalidPasswordAttempts="5" minRequiredPasswordLength="6" minRequiredNonalphanumericCharacters="0" passwordAttemptWindow="10"
             applicationName="/" />
      </providers>
    </membership>

    <profile>
      <providers>
        <clear/>
        <add name="AspNetSqlProfileProvider" type="System.Web.Profile.SqlProfileProvider" connectionStringName="ApplicationServices" applicationName="/" />
      </providers>
    </profile>

    <roleManager enabled="false">
      <providers>
        <clear/>
        <add name="AspNetSqlRoleProvider" type="System.Web.Security.SqlRoleProvider" connectionStringName="ApplicationServices" applicationName="/" />
        <add name="AspNetWindowsTokenRoleProvider" type="System.Web.Security.WindowsTokenRoleProvider" applicationName="/" />
      </providers>
    </roleManager>

    <pages>
      <namespaces>
        <add namespace="System.Web.Helpers" />
        <add namespace="System.Web.Mvc" />
        <add namespace="System.Web.Mvc.Ajax" />
        <add namespace="System.Web.Mvc.Html" />
        <add namespace="System.Web.Routing" />
        <add namespace="System.Web.WebPages"/>
      </namespaces>
    </pages>
  </system.web>

  <system.webServer>
    <validation validateIntegratedModeConfiguration="false"/>
    <modules runAllManagedModulesForAllRequests="true"/>
  </system.webServer>

  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Mvc" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="1.0.0.0-2.0.0.0" newVersion="3.0.0.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>


  <!--Mapeamentos-->
  <unity>
    <typeAliases>
      <!-- Cabeçalhos fixos não retirá-los -->
      <!-- Retorna a mesma instância do objeto ou tipo registrado a cada chamada do método Resolve ou ResolveAll -->
      <typeAlias alias="singleton" type="Microsoft.Practices.Unity.ContainerControlledLifetimeManager, Microsoft.Practices.Unity"/>
      <!-- Registra o mapeamento de objetos mantendo uma referência fraca, caso o GC identifique que outro código está 
             mantendo uma referência forte ao objeto ele pode realizar o dispose da instância criada pelo gerenciador -->
      <typeAlias alias="external" type="Microsoft.Practices.Unity.ExternallyControlledLifetimeManager, Microsoft.Practices.Unity"/>
      <!-- Implementa um comportamento singleton através de threads permitindo a criação de um novo objeto caso
             não esteja em uma thread específica -->
      <typeAlias alias="preThread" type="Microsoft.Practices.Unity.PreThreadLifetimeManager, Microsoft.Practices.Unity"/>

      <!-- Repositórios -->
      <typeAlias alias="IAnuncianteRepository" type="Juntos.IRepository.IAnuncianteRepository, Juntos.IRepository"/>
      <typeAlias alias="AnuncianteRepository" type="Juntos.Repository.AnuncianteRepository, Juntos.Repository"/>

      <typeAlias alias="IConsumidorRepository" type="Juntos.IRepository.IConsumidorRepository, Juntos.IRepository"/>
      <typeAlias alias="ConsumidorRepository" type="Juntos.Repository.ConsumidorRepository, Juntos.Repository"/>

      <typeAlias alias="ICompraRepository" type="Juntos.IRepository.ICompraRepository, Juntos.IRepository"/>
      <typeAlias alias="CompraRepository" type="Juntos.Repository.CompraRepository, Juntos.Repository"/>

      <typeAlias alias="IOfertaRepository" type="Juntos.IRepository.IOfertaRepository, Juntos.IRepository"/>
      <typeAlias alias="OfertaRepository" type="Juntos.Repository.OfertaRepository, Juntos.Repository"/>

      <!-- Services -->
      <typeAlias alias="IAnuncianteService" type="Juntos.IService.IAnuncianteService, Juntos.IService"/>
      <typeAlias alias="AnuncianteService" type="Juntos.Service.AnuncianteService, Juntos.Service"/>

      <typeAlias alias="IConsumidorService" type="Juntos.IService.IConsumidorService, Juntos.IService"/>
      <typeAlias alias="ConsumidorService" type="Juntos.Service.ConsumidorService, Juntos.Service"/>

      <typeAlias alias="ICompraService" type="Juntos.IService.ICompraService, Juntos.IService"/>
      <typeAlias alias="CompraService" type="Juntos.Service.CompraService, Juntos.Service"/>

      <typeAlias alias="IOfertaService" type="Juntos.IService.IOfertaService, Juntos.IService"/>
      <typeAlias alias="OfertaService" type="Juntos.Service.OfertaService, Juntos.Service"/>

      <!-- Camada de acesso a dados -->
      <typeAlias alias="IAnuncianteDAO" type="Juntos.IDAL.IAnuncianteDAO, Juntos.IDAL"/>
      <typeAlias alias="AnuncianteDAO" type="Juntos.DAL.Provider.EntityFramework.AnuncianteDAO, Juntos.DAL.Provider.EntityFramework"/>

      <typeAlias alias="IConsumidorDAO" type="Juntos.IDAL.IConsumidorDAO, Juntos.IDAL"/>
      <typeAlias alias="ConsumidorDAO" type="Juntos.DAL.Provider.EntityFramework.ConsumidorDAO, Juntos.DAL.Provider.EntityFramework"/>

      <typeAlias alias="ICupomDAO" type="Juntos.IDAL.ICupomDAO, Juntos.IDAL"/>
      <typeAlias alias="CupomDAO" type="Juntos.DAL.Provider.EntityFramework.CupomDAO, Juntos.DAL.Provider.EntityFramework"/>

      <typeAlias alias="ICompraDAO" type="Juntos.IDAL.ICompraDAO, Juntos.IDAL"/>
      <typeAlias alias="CompraDAO" type="Juntos.DAL.Provider.EntityFramework.CompraDAO, Juntos.DAL.Provider.EntityFramework"/>

      <typeAlias alias="IEnderecoDAO" type="Juntos.IDAL.IEnderecoDAO, Juntos.IDAL"/>
      <typeAlias alias="EnderecoDAO" type="Juntos.DAL.Provider.EntityFramework.EnderecoDAO, Juntos.DAL.Provider.EntityFramework"/>

      <typeAlias alias="IOfertaDAO" type="Juntos.IDAL.IOfertaDAO, Juntos.IDAL"/>
      <typeAlias alias="OfertaDAO" type="Juntos.DAL.Provider.EntityFramework.OfertaDAO, Juntos.DAL.Provider.EntityFramework"/>

      <typeAlias alias="IPagamentoDAO" type="Juntos.IDAL.IPagamentoDAO, Juntos.IDAL"/>
      <typeAlias alias="PagamentoDAO" type="Juntos.DAL.Provider.EntityFramework.PagamentoDAO, Juntos.DAL.Provider.EntityFramework"/>

      <typeAlias alias="ITelefoneDAO" type="Juntos.IDAL.ITelefoneDAO, Juntos.IDAL"/>
      <typeAlias alias="TelefoneDAO" type="Juntos.DAL.Provider.EntityFramework.TelefoneDAO, Juntos.DAL.Provider.EntityFramework"/>
    </typeAliases>
    <containers>
      <container name="container">
        <types>
          <!-- Repositórios -->
          <type type="IAnuncianteRepository" mapTo="AnuncianteRepository">
            <lifetime type="singleton"/>
          </type>

          <type type="IConsumidorRepository" mapTo="ConsumidorRepository">
            <lifetime type="singleton"/>
          </type>

          <type type="ICompraRepository" mapTo="CompraRepository">
            <lifetime type="singleton"/>
          </type>

          <type type="IOfertaRepository" mapTo="OfertaRepository">
            <lifetime type="singleton"/>
          </type>

          <!-- Camada de acesso a dados -->
          <type type="IAnuncianteDAO" mapTo="AnuncianteDAO"/>
          <type type="IConsumidorDAO" mapTo="ConsumidorDAO"/>
          <type type="ICompraDAO" mapTo="CompraDAO"/>
          <type type="ICupomDAO" mapTo="CupomDAO"/>
          <type type="IEnderecoDAO" mapTo="EnderecoDAO"/>
          <type type="IOfertaDAO" mapTo="OfertaDAO"/>
          <type type="IPagamentoDAO" mapTo="PagamentoDAO"/>
          <type type="ITelefoneDAO" mapTo="TelefoneDAO"/>


          <!-- Camada de serviços de domínio -->
          <type type="IAnuncianteService" mapTo="AnuncianteService"/>
          <type type="IConsumidorService" mapTo="ConsumidorService"/>
          <type type="ICompraService" mapTo="CompraService"/>
          <type type="IOfertaService" mapTo="OfertaService"/>
        </types>
      </container>
    </containers>
  </unity>

</configuration>
