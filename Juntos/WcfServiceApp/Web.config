<?xml version="1.0"?>
<configuration>
  <configSections>
    <section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration"/>
  </configSections>

  <connectionStrings>
    <add name="JuntosDb" connectionString="Data Source=C:\db\JuntosDb.sdf" providerName="System.Data.SqlServerCe.4.0"/>
  </connectionStrings>

  <system.web>
    <compilation debug="true" targetFramework="4.0" />
  </system.web>
  <system.serviceModel>
    <bindings>
      <basicHttpBinding>
        <binding name="BasicHttpBinding_IPagamentoService" />
        <binding name="BasicHttpBinding_IControladorPagamentoService"
          closeTimeout="00:10:00" openTimeout="00:10:00" receiveTimeout="00:10:00"
          sendTimeout="00:10:00" allowCookies="false" bypassProxyOnLocal="false"
          hostNameComparisonMode="StrongWildcard" maxBufferSize="65536"
          maxBufferPoolSize="524288" maxReceivedMessageSize="65536" messageEncoding="Text"
          textEncoding="utf-8" transferMode="Buffered" useDefaultWebProxy="true">
          <readerQuotas maxDepth="32" maxStringContentLength="8192" maxArrayLength="16384"
            maxBytesPerRead="4096" maxNameTableCharCount="16384" />
          <security mode="None">
            <transport clientCredentialType="None" proxyCredentialType="None"
              realm="" />
            <message clientCredentialType="UserName" algorithmSuite="Default" />
          </security>
        </binding>
      </basicHttpBinding>
    </bindings>
    <client>
      <endpoint address="http://localhost:1459/PagamentoService.svc"
        binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_IPagamentoService"
        contract="PagamentoServices.IPagamentoService" name="BasicHttpBinding_IPagamentoService" />
      <endpoint address="http://localhost:3815/ControladorDePagamentoService.svc"
        binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_IControladorPagamentoService"
        contract="wsProxy.IControladorPagamentoService" name="BasicHttpBinding_IControladorPagamentoService" />
    </client>
    <behaviors>
      <serviceBehaviors>
        <behavior>
          <!-- To avoid disclosing metadata information, set the value below to false and remove the metadata endpoint above before deployment -->
          <serviceMetadata httpGetEnabled="true"/>
          <!-- To receive exception details in faults for debugging purposes, set the value below to true.  Set to false before deployment to avoid disclosing exception information -->
          <serviceDebug includeExceptionDetailInFaults="false"/>
        </behavior>
      </serviceBehaviors>
    </behaviors>
    <serviceHostingEnvironment multipleSiteBindingsEnabled="true" />
  </system.serviceModel>
 <system.webServer>
    <modules runAllManagedModulesForAllRequests="true"/>
  </system.webServer>

  <!--Mapeamentos-->
  <unity>
    <typeAliases>
      <!-- Cabeçalhos fixos não retirá-los -->
      <!-- Retorna a mesma instância do objeto ou tipo registrado a cada chamada do método Resolve ou ResolveAll -->
      <typeAlias alias="singleton" type="Microsoft.Practices.Unity.ContainerControlledLifetimeManager, Microsoft.Practices.Unity"/>
      <!-- Registra o mapeamento de objetos mantendo uma referência fraca, caso o GC identifique que outro código está 
             mantendo uma referência forte ao objeto ele pode realizar o dispose da instância criada pelo gerenciador -->
      <typeAlias alias="external" type="Microsoft.Practices.Unity.ExternallyControlledLifetimeManager, Microsoft.Practices.Unity"/>
      <!-- Implementa um comportamento singleton através de threads permitindo a criação de um novo objeto caso
             não esteja em uma thread específica -->
      <typeAlias alias="preThread" type="Microsoft.Practices.Unity.PreThreadLifetimeManager, Microsoft.Practices.Unity"/>

      <!-- Repositórios -->
      <typeAlias alias="IAnuncianteRepository" type="Juntos.IRepository.IAnuncianteRepository, Juntos.IRepository"/>
      <typeAlias alias="AnuncianteRepository" type="Juntos.Repository.AnuncianteRepository, Juntos.Repository"/>

      <typeAlias alias="IConsumidorRepository" type="Juntos.IRepository.IConsumidorRepository, Juntos.IRepository"/>
      <typeAlias alias="ConsumidorRepository" type="Juntos.Repository.ConsumidorRepository, Juntos.Repository"/>

      <typeAlias alias="ICompraRepository" type="Juntos.IRepository.ICompraRepository, Juntos.IRepository"/>
      <typeAlias alias="CompraRepository" type="Juntos.Repository.CompraRepository, Juntos.Repository"/>

      <typeAlias alias="IOfertaRepository" type="Juntos.IRepository.IOfertaRepository, Juntos.IRepository"/>
      <typeAlias alias="OfertaRepository" type="Juntos.Repository.OfertaRepository, Juntos.Repository"/>

      <!-- Services -->
      <typeAlias alias="IAnuncianteService" type="Juntos.IService.IAnuncianteService, Juntos.IService"/>
      <typeAlias alias="AnuncianteService" type="Juntos.Service.AnuncianteService, Juntos.Service"/>

      <typeAlias alias="IConsumidorService" type="Juntos.IService.IConsumidorService, Juntos.IService"/>
      <typeAlias alias="ConsumidorService" type="Juntos.Service.ConsumidorService, Juntos.Service"/>

      <typeAlias alias="ICompraService" type="Juntos.IService.ICompraService, Juntos.IService"/>
      <typeAlias alias="CompraService" type="Juntos.Service.CompraService, Juntos.Service"/>

      <typeAlias alias="IOfertaService" type="Juntos.IService.IOfertaService, Juntos.IService"/>
      <typeAlias alias="OfertaService" type="Juntos.Service.OfertaService, Juntos.Service"/>

      <!-- Camada de acesso a dados -->
      <typeAlias alias="IAnuncianteDAO" type="Juntos.IDAL.IAnuncianteDAO, Juntos.IDAL"/>
      <typeAlias alias="AnuncianteDAO" type="Juntos.DAL.Provider.EntityFramework.AnuncianteDAO, Juntos.DAL.Provider.EntityFramework"/>

      <typeAlias alias="IConsumidorDAO" type="Juntos.IDAL.IConsumidorDAO, Juntos.IDAL"/>
      <typeAlias alias="ConsumidorDAO" type="Juntos.DAL.Provider.EntityFramework.ConsumidorDAO, Juntos.DAL.Provider.EntityFramework"/>

      <typeAlias alias="ICupomDAO" type="Juntos.IDAL.ICupomDAO, Juntos.IDAL"/>
      <typeAlias alias="CupomDAO" type="Juntos.DAL.Provider.EntityFramework.CupomDAO, Juntos.DAL.Provider.EntityFramework"/>

      <typeAlias alias="ICompraDAO" type="Juntos.IDAL.ICompraDAO, Juntos.IDAL"/>
      <typeAlias alias="CompraDAO" type="Juntos.DAL.Provider.EntityFramework.CompraDAO, Juntos.DAL.Provider.EntityFramework"/>

      <typeAlias alias="IEnderecoDAO" type="Juntos.IDAL.IEnderecoDAO, Juntos.IDAL"/>
      <typeAlias alias="EnderecoDAO" type="Juntos.DAL.Provider.EntityFramework.EnderecoDAO, Juntos.DAL.Provider.EntityFramework"/>

      <typeAlias alias="IOfertaDAO" type="Juntos.IDAL.IOfertaDAO, Juntos.IDAL"/>
      <typeAlias alias="OfertaDAO" type="Juntos.DAL.Provider.EntityFramework.OfertaDAO, Juntos.DAL.Provider.EntityFramework"/>

      <typeAlias alias="IPagamentoDAO" type="Juntos.IDAL.IPagamentoDAO, Juntos.IDAL"/>
      <typeAlias alias="PagamentoDAO" type="Juntos.DAL.Provider.EntityFramework.PagamentoDAO, Juntos.DAL.Provider.EntityFramework"/>

      <typeAlias alias="ITelefoneDAO" type="Juntos.IDAL.ITelefoneDAO, Juntos.IDAL"/>
      <typeAlias alias="TelefoneDAO" type="Juntos.DAL.Provider.EntityFramework.TelefoneDAO, Juntos.DAL.Provider.EntityFramework"/>
    </typeAliases>
    <containers>
      <container name="container">
        <types>
          <!-- Repositórios -->
          <type type="IAnuncianteRepository" mapTo="AnuncianteRepository">
            <lifetime type="singleton"/>
          </type>

          <type type="IConsumidorRepository" mapTo="ConsumidorRepository">
            <lifetime type="singleton"/>
          </type>

          <type type="ICompraRepository" mapTo="CompraRepository">
            <lifetime type="singleton"/>
          </type>

          <type type="IOfertaRepository" mapTo="OfertaRepository">
            <lifetime type="singleton"/>
          </type>

          <!-- Camada de acesso a dados -->
          <type type="IAnuncianteDAO" mapTo="AnuncianteDAO"/>
          <type type="IConsumidorDAO" mapTo="ConsumidorDAO"/>
          <type type="ICompraDAO" mapTo="CompraDAO"/>
          <type type="ICupomDAO" mapTo="CupomDAO"/>
          <type type="IEnderecoDAO" mapTo="EnderecoDAO"/>
          <type type="IOfertaDAO" mapTo="OfertaDAO"/>
          <type type="IPagamentoDAO" mapTo="PagamentoDAO"/>
          <type type="ITelefoneDAO" mapTo="TelefoneDAO"/>


          <!-- Camada de serviços de domínio -->
          <type type="IAnuncianteService" mapTo="AnuncianteService"/>
          <type type="IConsumidorService" mapTo="ConsumidorService"/>
          <type type="ICompraService" mapTo="CompraService"/>
          <type type="IOfertaService" mapTo="OfertaService"/>
        </types>
      </container>
    </containers>
  </unity>
  
</configuration>
